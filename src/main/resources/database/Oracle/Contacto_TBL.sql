CREATE TABLE CONTACTO
(
  CONTACTO_ID                  NUMBER(6)     NOT NULL,
  TIPO_PERSONA                 NUMBER(1)     NOT NULL,
  ENTIDAD_ID                   NUMBER(5)     NOT NULL,
  CIUDADANO_ID                 NUMBER(10),
  DESCRIPCION                  VARCHAR2(150),
  CORREO_CORPORATIVO           VARCHAR2(128) NOT NULL,
  CORREO_ALTERNO               VARCHAR2(128),
  POSICION                     VARCHAR2(60),
  FECHA_CREACION               DATE          NOT NULL,
  FECHA_ULTIMO_CAMBIO          DATE,
  TIENE_HIJOS                  NUMBER(1)     DEFAULT 0 NOT NULL,
  ESTADO                       VARCHAR2(2)   NOT NULL
)
;

COMMENT ON TABLE CONTACTO IS 'Repositorio que almacena los contactos del sistema.';

COMMENT ON COLUMN CONTACTO.CONTACTO_ID IS 'Código que identifica el contacto';
COMMENT ON COLUMN CONTACTO.TIPO_PERSONA IS 'Código que identifica el tipo de persona asociado al contacto. Posibles valores: 1=Física, 2=Moral, 3=Notificación.';
COMMENT ON COLUMN CONTACTO.ENTIDAD_ID IS 'Entidad a la que pertenece el contacto';
COMMENT ON COLUMN CONTACTO.CIUDADANO_ID IS 'Código del ciudadano asociado a la cuenta';
COMMENT ON COLUMN CONTACTO.DESCRIPCION IS 'Descripción del contacto aplicable cuando el tipo de persona sea 3-Notificación';
COMMENT ON COLUMN CONTACTO.CORREO_CORPORATIVO IS 'correo corporativo del usuario';
COMMENT ON COLUMN CONTACTO.CORREO_ALTERNO IS 'Correo alterno del contacto';
COMMENT ON COLUMN CONTACTO.POSICION IS 'Posición del contacto';
COMMENT ON COLUMN CONTACTO.FECHA_CREACION IS 'Fecha en la que se creó el contacto';
COMMENT ON COLUMN CONTACTO.FECHA_ULTIMO_CAMBIO IS 'Fecha en la que se realizó el último cambio';
COMMENT ON COLUMN CONTACTO.USUARIO_ULTIMO_CAMBIO_ID IS 'Código del usuario asociado al último cambio';
COMMENT ON COLUMN CONTACTO.CONTRATO_CONFIDENCIALIDAD_ID IS 'Código de Contrato confidencial.';
COMMENT ON COLUMN CONTACTO.CATEGORIA_INFO_CONTACTO_ID IS 'Identificador único de la categoría de información de contacto.';
COMMENT ON COLUMN CONTACTO.TIENE_HIJOS IS 'Indicador que dice si el contacto tiene hijos o no. Posibles valores 0=No, 1=Si';
COMMENT ON COLUMN CONTACTO.USUARIO_GESTOR_ALTA_CTO_ID IS 'Id que identifica el usuario gestor que realizó  la solicitud de alta del contacto.';
COMMENT ON COLUMN CONTACTO.ESTADO IS 'Estado en el que se encuentra el contacto. Posibles valores: AC = Activo, IN = Inactivo';

CREATE UNIQUE INDEX CONTACTO_IDX ON CONTACTO(CONTACTO_ID) ;
CREATE INDEX CONTACTO_CIUDADANO_IDX ON CONTACTO(CIUDADANO_ID) ;
CREATE INDEX CONTACTO_ENTIDAD_IDX ON CONTACTO(ENTIDAD_ID) ;

ALTER TABLE CONTACTO ADD CONSTRAINT CONTACTO_PK PRIMARY KEY (CONTACTO_ID);
ALTER TABLE CONTACTO ADD CONSTRAINT CONTACTO_TIPO_PERSONA_CK CHECK (TIPO_PERSONA IN (1, 2, 3));
ALTER TABLE CONTACTO ADD CONSTRAINT CONTACTO_ENTIDAD_FK FOREIGN KEY (ENTIDAD_ID) REFERENCES ENTIDAD(ENTIDAD_ID);
ALTER TABLE CONTACTO ADD CONSTRAINT CONTACTO_CIUDADANO_FK FOREIGN KEY (CIUDADANO_ID) REFERENCES CIUDADANO(CIUDADANO_ID);
ALTER TABLE CONTACTO ADD CONSTRAINT CONTACTO_USUARIO_FK FOREIGN KEY (USUARIO_ULTIMO_CAMBIO_ID) REFERENCES USUARIO(USUARIO_ID);
ALTER TABLE CONTACTO ADD CONSTRAINT CONTACTO_CONTRACTO_FK FOREIGN KEY (CONTRATO_CONFIDENCIALIDAD_ID) REFERENCES CONTRATO(CONTRATO_ID);
ALTER TABLE CONTACTO ADD CONSTRAINT CONTACTO_CATEGORIA_INFO_CTO_FK FOREIGN KEY (CATEGORIA_INFO_CONTACTO_ID) REFERENCES CATEGORIA_INFO_CONTACTO(CATEGORIA_INFO_CONTACTO_ID);
ALTER TABLE CONTACTO ADD CONSTRAINT CONTACTO_TIENE_HIJOS_CK CHECK (TIENE_HIJOS IN (0, 1));
ALTER TABLE CONTACTO ADD CONSTRAINT CTO_USR_GESTOR_ALTA_CTO_FK FOREIGN KEY (USUARIO_GESTOR_ALTA_CTO_ID) REFERENCES USUARIO(USUARIO_ID);
ALTER TABLE CONTACTO ADD CONSTRAINT CONTACTO_ESTADO_CK CHECK (ESTADO IN ('AC', 'IN'));